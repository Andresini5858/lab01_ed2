

Microchip MPLAB XC8 Assembler V2.40 build 20220703182018 
                                                                                               Thu Jan 19 23:20:18 2023

Microchip MPLAB XC8 C Compiler v2.40 (Free license) build 20220703182018 Og1 
     1                           	processor	16F887
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	idataBANK0,global,class=CODE,delta=2,noexec
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1,noexec
     7                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,noexec
     8                           	psect	inittext,global,class=CODE,delta=2
     9                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
    10                           	psect	maintext,global,class=CODE,split=1,delta=2
    11                           	psect	text1,local,class=CODE,merge=1,delta=2
    12                           	psect	text2,local,class=CODE,merge=1,delta=2
    13                           	psect	text3,local,class=CODE,merge=1,delta=2
    14                           	psect	intentry,global,class=CODE,delta=2
    15                           	psect	text4,local,class=CODE,merge=1,delta=2
    16                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=2,noexec
    17                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    18                           	dabs	1,0x7E,2
    19     0000                     
    20                           ; Version 2.40
    21                           ; Generated 17/11/2021 GMT
    22                           ; 
    23                           ; Copyright Â© 2021, Microchip Technology Inc. and its subsidiaries ("Microchip")
    24                           ; All rights reserved.
    25                           ; 
    26                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    27                           ; 
    28                           ; Redistribution and use in source and binary forms, with or without modification, are
    29                           ; permitted provided that the following conditions are met:
    30                           ; 
    31                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    32                           ;        conditions and the following disclaimer.
    33                           ; 
    34                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    35                           ;        of conditions and the following disclaimer in the documentation and/or other
    36                           ;        materials provided with the distribution. Publication is not required when
    37                           ;        this file is used in an embedded application.
    38                           ; 
    39                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    40                           ;        software without specific prior written permission.
    41                           ; 
    42                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    43                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    44                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    45                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    46                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    47                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    48                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    49                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    50                           ; 
    51                           ; 
    52                           ; Code-generator required, PIC16F887 Definitions
    53                           ; 
    54                           ; SFR Addresses
    55     0000                     	;# 
    56     0001                     	;# 
    57     0002                     	;# 
    58     0003                     	;# 
    59     0004                     	;# 
    60     0005                     	;# 
    61     0006                     	;# 
    62     0007                     	;# 
    63     0008                     	;# 
    64     0009                     	;# 
    65     000A                     	;# 
    66     000B                     	;# 
    67     000C                     	;# 
    68     000D                     	;# 
    69     000E                     	;# 
    70     000E                     	;# 
    71     000F                     	;# 
    72     0010                     	;# 
    73     0011                     	;# 
    74     0012                     	;# 
    75     0013                     	;# 
    76     0014                     	;# 
    77     0015                     	;# 
    78     0015                     	;# 
    79     0016                     	;# 
    80     0017                     	;# 
    81     0018                     	;# 
    82     0019                     	;# 
    83     001A                     	;# 
    84     001B                     	;# 
    85     001B                     	;# 
    86     001C                     	;# 
    87     001D                     	;# 
    88     001E                     	;# 
    89     001F                     	;# 
    90     0081                     	;# 
    91     0085                     	;# 
    92     0086                     	;# 
    93     0087                     	;# 
    94     0088                     	;# 
    95     0089                     	;# 
    96     008C                     	;# 
    97     008D                     	;# 
    98     008E                     	;# 
    99     008F                     	;# 
   100     0090                     	;# 
   101     0091                     	;# 
   102     0092                     	;# 
   103     0093                     	;# 
   104     0093                     	;# 
   105     0093                     	;# 
   106     0094                     	;# 
   107     0095                     	;# 
   108     0096                     	;# 
   109     0097                     	;# 
   110     0098                     	;# 
   111     0099                     	;# 
   112     009A                     	;# 
   113     009B                     	;# 
   114     009C                     	;# 
   115     009D                     	;# 
   116     009E                     	;# 
   117     009F                     	;# 
   118     0105                     	;# 
   119     0107                     	;# 
   120     0108                     	;# 
   121     0109                     	;# 
   122     010C                     	;# 
   123     010C                     	;# 
   124     010D                     	;# 
   125     010E                     	;# 
   126     010F                     	;# 
   127     0185                     	;# 
   128     0187                     	;# 
   129     0188                     	;# 
   130     0189                     	;# 
   131     018C                     	;# 
   132     018D                     	;# 
   133     0000                     	;# 
   134     0001                     	;# 
   135     0002                     	;# 
   136     0003                     	;# 
   137     0004                     	;# 
   138     0005                     	;# 
   139     0006                     	;# 
   140     0007                     	;# 
   141     0008                     	;# 
   142     0009                     	;# 
   143     000A                     	;# 
   144     000B                     	;# 
   145     000C                     	;# 
   146     000D                     	;# 
   147     000E                     	;# 
   148     000E                     	;# 
   149     000F                     	;# 
   150     0010                     	;# 
   151     0011                     	;# 
   152     0012                     	;# 
   153     0013                     	;# 
   154     0014                     	;# 
   155     0015                     	;# 
   156     0015                     	;# 
   157     0016                     	;# 
   158     0017                     	;# 
   159     0018                     	;# 
   160     0019                     	;# 
   161     001A                     	;# 
   162     001B                     	;# 
   163     001B                     	;# 
   164     001C                     	;# 
   165     001D                     	;# 
   166     001E                     	;# 
   167     001F                     	;# 
   168     0081                     	;# 
   169     0085                     	;# 
   170     0086                     	;# 
   171     0087                     	;# 
   172     0088                     	;# 
   173     0089                     	;# 
   174     008C                     	;# 
   175     008D                     	;# 
   176     008E                     	;# 
   177     008F                     	;# 
   178     0090                     	;# 
   179     0091                     	;# 
   180     0092                     	;# 
   181     0093                     	;# 
   182     0093                     	;# 
   183     0093                     	;# 
   184     0094                     	;# 
   185     0095                     	;# 
   186     0096                     	;# 
   187     0097                     	;# 
   188     0098                     	;# 
   189     0099                     	;# 
   190     009A                     	;# 
   191     009B                     	;# 
   192     009C                     	;# 
   193     009D                     	;# 
   194     009E                     	;# 
   195     009F                     	;# 
   196     0105                     	;# 
   197     0107                     	;# 
   198     0108                     	;# 
   199     0109                     	;# 
   200     010C                     	;# 
   201     010C                     	;# 
   202     010D                     	;# 
   203     010E                     	;# 
   204     010F                     	;# 
   205     0185                     	;# 
   206     0187                     	;# 
   207     0188                     	;# 
   208     0189                     	;# 
   209     018C                     	;# 
   210     018D                     	;# 
   211                           
   212                           	psect	idataBANK0
   213     00BA                     __pidataBANK0:
   214                           
   215                           ;initializer for _nums
   216     00BA  343F               	retlw	63
   217     00BB  3406               	retlw	6
   218     00BC  345B               	retlw	91
   219     00BD  344F               	retlw	79
   220     00BE  3466               	retlw	102
   221     00BF  346D               	retlw	109
   222     00C0  347D               	retlw	125
   223     00C1  3407               	retlw	7
   224     00C2  347F               	retlw	127
   225     00C3  3467               	retlw	103
   226     00C4  3477               	retlw	119
   227     00C5  347C               	retlw	124
   228     00C6  3439               	retlw	57
   229     00C7  345E               	retlw	94
   230     00C8  3479               	retlw	121
   231     00C9  3471               	retlw	113
   232     0007                     _PORTC	set	7
   233     0006                     _PORTB	set	6
   234     0005                     _PORTA	set	5
   235     0008                     _PORTD	set	8
   236     0006                     _PORTBbits	set	6
   237     000B                     _INTCONbits	set	11
   238     001F                     _ADCON0bits	set	31
   239     009F                     _ADCON1bits	set	159
   240     008F                     _OSCCONbits	set	143
   241     0096                     _IOCBbits	set	150
   242     0095                     _WPUBbits	set	149
   243     008C                     _PIE1bits	set	140
   244     0081                     _OPTION_REGbits	set	129
   245     0088                     _TRISD	set	136
   246     0087                     _TRISC	set	135
   247     0085                     _TRISA	set	133
   248     0189                     _ANSELH	set	393
   249     0188                     _ANSEL	set	392
   250                           
   251                           	psect	cinit
   252     000F                     start_initialization:	
   253                           ; #config settings
   254                           
   255     000F                     __initialization:
   256                           
   257                           ; Initialize objects allocated to BANK0
   258     000F  1383               	bcf	3,7	;select IRP bank0
   259     0010  3030               	movlw	low (__pdataBANK0+16)
   260     0011  00FD               	movwf	btemp+-1
   261     0012  3000               	movlw	high __pidataBANK0
   262     0013  00FE               	movwf	btemp
   263     0014  30BA               	movlw	low __pidataBANK0
   264     0015  00FF               	movwf	btemp+1
   265     0016  3020               	movlw	low __pdataBANK0
   266     0017  0084               	movwf	4
   267     0018  120A  118A  209A  120A  118A  	fcall	init_ram0
   268                           
   269                           ; Clear objects allocated to COMMON
   270     001D  01F4               	clrf	__pbssCOMMON& (0+127)
   271     001E                     end_of_initialization:	
   272                           ;End of C runtime variable initialization code
   273                           
   274     001E                     __end_of__initialization:
   275     001E  0183               	clrf	3
   276     001F  120A  118A  286C   	ljmp	_main	;jump to C main() function
   277                           
   278                           	psect	bssCOMMON
   279     0074                     __pbssCOMMON:
   280     0074                     _bandera:
   281     0074                     	ds	1
   282                           
   283                           	psect	dataBANK0
   284     0020                     __pdataBANK0:
   285     0020                     _nums:
   286     0020                     	ds	16
   287                           
   288                           	psect	inittext
   289     0096                     init_fetch0:	
   290                           ;	Called with low address in FSR and high address in W
   291                           
   292     0096  087E               	movf	btemp,w
   293     0097  008A               	movwf	10
   294     0098  087F               	movf	btemp+1,w
   295     0099  0082               	movwf	2
   296     009A                     init_ram0:	
   297                           ;Called with:
   298                           ;	high address of idata address in btemp 
   299                           ;	low address of idata address in btemp+1 
   300                           ;	low address of data in FSR
   301                           ;	high address + 1 of data in btemp-1
   302                           
   303     009A  120A  118A  2096  120A  118A  	fcall	init_fetch0
   304     009F  0080               	movwf	0
   305     00A0  0A84               	incf	4,f
   306     00A1  0804               	movf	4,w
   307     00A2  067D               	xorwf	btemp+-1,w
   308     00A3  1903               	btfsc	3,2
   309     00A4  3400               	retlw	0
   310     00A5  0AFF               	incf	btemp+1,f
   311     00A6  1903               	btfsc	3,2
   312     00A7  0AFE               	incf	btemp,f
   313     00A8  289A               	goto	init_ram0
   314                           
   315                           	psect	cstackCOMMON
   316     0070                     __pcstackCOMMON:
   317     0070                     ?_setup:
   318     0070                     ?_setupADC:	
   319                           ; 1 bytes @ 0x0
   320                           
   321     0070                     ?_contador:	
   322                           ; 1 bytes @ 0x0
   323                           
   324     0070                     ??_contador:	
   325                           ; 1 bytes @ 0x0
   326                           
   327     0070                     ?_main:	
   328                           ; 1 bytes @ 0x0
   329                           
   330     0070                     ?_isr:	
   331                           ; 1 bytes @ 0x0
   332                           
   333                           
   334                           ; 1 bytes @ 0x0
   335     0070                     	ds	1
   336     0071                     ??_isr:
   337                           
   338                           ; 1 bytes @ 0x1
   339     0071                     	ds	2
   340     0073                     ??_setup:
   341     0073                     ??_setupADC:	
   342                           ; 1 bytes @ 0x3
   343                           
   344                           
   345                           ; 1 bytes @ 0x3
   346     0073                     	ds	1
   347     0074                     ??_main:
   348                           
   349                           	psect	maintext
   350     006C                     __pmaintext:	
   351                           ; 1 bytes @ 0x4
   352 ;;
   353 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   354 ;;
   355 ;; *************** function _main *****************
   356 ;; Defined at:
   357 ;;		line 58 in file "main.c"
   358 ;; Parameters:    Size  Location     Type
   359 ;;		None
   360 ;; Auto vars:     Size  Location     Type
   361 ;;		None
   362 ;; Return value:  Size  Location     Type
   363 ;;                  1    wreg      void 
   364 ;; Registers used:
   365 ;;		wreg, status,2, status,0, pclath, cstack
   366 ;; Tracked objects:
   367 ;;		On entry : B00/0
   368 ;;		On exit  : 0/0
   369 ;;		Unchanged: 0/0
   370 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   371 ;;      Params:         0       0       0       0       0
   372 ;;      Locals:         0       0       0       0       0
   373 ;;      Temps:          0       0       0       0       0
   374 ;;      Totals:         0       0       0       0       0
   375 ;;Total ram usage:        0 bytes
   376 ;; Hardware stack levels required when called: 3
   377 ;; This function calls:
   378 ;;		_setup
   379 ;;		_setupADC
   380 ;; This function is called by:
   381 ;;		Startup code after reset
   382 ;; This function uses a non-reentrant model
   383 ;;
   384                           
   385     006C                     _main:	
   386                           ;psect for function _main
   387                           
   388     006C                     l738:	
   389                           ;incstack = 0
   390                           ; Regs used in _main: [wreg+status,2+status,0+pclath+cstack]
   391                           
   392                           
   393                           ;main.c: 59:     setup();
   394     006C  120A  118A  204C  120A  118A  	fcall	_setup
   395                           
   396                           ;main.c: 60:     setupADC();
   397     0071  120A  118A  2081  120A  118A  	fcall	_setupADC
   398     0076                     l740:
   399                           
   400                           ;main.c: 62:         if (ADCON0bits.GO == 0){
   401     0076  1283               	bcf	3,5	;RP0=0, select bank0
   402     0077  1303               	bcf	3,6	;RP1=0, select bank0
   403     0078  189F               	btfsc	31,1	;volatile
   404     0079  287B               	goto	u71
   405     007A  287C               	goto	u70
   406     007B                     u71:
   407     007B  2876               	goto	l740
   408     007C                     u70:
   409     007C                     l742:
   410                           
   411                           ;main.c: 63:             ADCON0bits.GO = 1;}
   412     007C  149F               	bsf	31,1	;volatile
   413     007D  2876               	goto	l740
   414     007E  120A  118A  280C   	ljmp	start
   415     0081                     __end_of_main:
   416                           
   417                           	psect	text1
   418     0081                     __ptext1:	
   419 ;; *************** function _setupADC *****************
   420 ;; Defined at:
   421 ;;		line 120 in file "main.c"
   422 ;; Parameters:    Size  Location     Type
   423 ;;		None
   424 ;; Auto vars:     Size  Location     Type
   425 ;;		None
   426 ;; Return value:  Size  Location     Type
   427 ;;                  1    wreg      void 
   428 ;; Registers used:
   429 ;;		wreg
   430 ;; Tracked objects:
   431 ;;		On entry : 0/0
   432 ;;		On exit  : 0/0
   433 ;;		Unchanged: 0/0
   434 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   435 ;;      Params:         0       0       0       0       0
   436 ;;      Locals:         0       0       0       0       0
   437 ;;      Temps:          1       0       0       0       0
   438 ;;      Totals:         1       0       0       0       0
   439 ;;Total ram usage:        1 bytes
   440 ;; Hardware stack levels used: 1
   441 ;; Hardware stack levels required when called: 2
   442 ;; This function calls:
   443 ;;		Nothing
   444 ;; This function is called by:
   445 ;;		_main
   446 ;; This function uses a non-reentrant model
   447 ;;
   448                           
   449     0081                     _setupADC:	
   450                           ;psect for function _setupADC
   451                           
   452     0081                     l712:	
   453                           ;incstack = 0
   454                           ; Regs used in _setupADC: [wreg]
   455                           
   456                           
   457                           ;main.c: 121:     ADCON0bits.ADCS1 = 0;
   458     0081  1283               	bcf	3,5	;RP0=0, select bank0
   459     0082  1303               	bcf	3,6	;RP1=0, select bank0
   460     0083  139F               	bcf	31,7	;volatile
   461                           
   462                           ;main.c: 122:     ADCON0bits.ADCS0 = 1;
   463     0084  171F               	bsf	31,6	;volatile
   464                           
   465                           ;main.c: 124:     ADCON1bits.VCFG1 = 0;
   466     0085  1683               	bsf	3,5	;RP0=1, select bank1
   467     0086  1303               	bcf	3,6	;RP1=0, select bank1
   468     0087  129F               	bcf	31,5	;volatile
   469                           
   470                           ;main.c: 125:     ADCON1bits.VCFG0 = 0;
   471     0088  121F               	bcf	31,4	;volatile
   472                           
   473                           ;main.c: 127:     ADCON1bits.ADFM = 0;
   474     0089  139F               	bcf	31,7	;volatile
   475                           
   476                           ;main.c: 129:     ADCON0bits.CHS3 = 1;
   477     008A  1283               	bcf	3,5	;RP0=0, select bank0
   478     008B  1303               	bcf	3,6	;RP1=0, select bank0
   479     008C  169F               	bsf	31,5	;volatile
   480                           
   481                           ;main.c: 130:     ADCON0bits.CHS2 = 1;
   482     008D  161F               	bsf	31,4	;volatile
   483                           
   484                           ;main.c: 131:     ADCON0bits.CHS1 = 0;
   485     008E  119F               	bcf	31,3	;volatile
   486                           
   487                           ;main.c: 132:     ADCON0bits.CHS0 = 0;
   488     008F  111F               	bcf	31,2	;volatile
   489                           
   490                           ;main.c: 134:     ADCON0bits.ADON = 1;
   491     0090  141F               	bsf	31,0	;volatile
   492     0091                     l714:
   493                           
   494                           ;main.c: 135:     _delay((unsigned long)((100)*(4000000/4000000.0)));
   495     0091  3021               	movlw	33
   496     0092  00F3               	movwf	??_setupADC
   497     0093                     u97:
   498     0093  0BF3               	decfsz	??_setupADC,f
   499     0094  2893               	goto	u97
   500     0095                     l76:
   501     0095  0008               	return
   502     0096                     __end_of_setupADC:
   503                           
   504                           	psect	text2
   505     004C                     __ptext2:	
   506 ;; *************** function _setup *****************
   507 ;; Defined at:
   508 ;;		line 89 in file "main.c"
   509 ;; Parameters:    Size  Location     Type
   510 ;;		None
   511 ;; Auto vars:     Size  Location     Type
   512 ;;		None
   513 ;; Return value:  Size  Location     Type
   514 ;;                  1    wreg      void 
   515 ;; Registers used:
   516 ;;		wreg, status,2
   517 ;; Tracked objects:
   518 ;;		On entry : 0/0
   519 ;;		On exit  : 0/0
   520 ;;		Unchanged: 0/0
   521 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   522 ;;      Params:         0       0       0       0       0
   523 ;;      Locals:         0       0       0       0       0
   524 ;;      Temps:          0       0       0       0       0
   525 ;;      Totals:         0       0       0       0       0
   526 ;;Total ram usage:        0 bytes
   527 ;; Hardware stack levels used: 1
   528 ;; Hardware stack levels required when called: 2
   529 ;; This function calls:
   530 ;;		Nothing
   531 ;; This function is called by:
   532 ;;		_main
   533 ;; This function uses a non-reentrant model
   534 ;;
   535                           
   536     004C                     _setup:	
   537                           ;psect for function _setup
   538                           
   539     004C                     l668:	
   540                           ;incstack = 0
   541                           ; Regs used in _setup: [wreg+status,2]
   542                           
   543                           
   544                           ;main.c: 90:     ANSEL = 0;
   545     004C  1683               	bsf	3,5	;RP0=1, select bank3
   546     004D  1703               	bsf	3,6	;RP1=1, select bank3
   547     004E  0188               	clrf	8	;volatile
   548     004F                     l670:
   549                           
   550                           ;main.c: 91:     ANSELH = 0b00000100;
   551     004F  3004               	movlw	4
   552     0050  0089               	movwf	9	;volatile
   553     0051                     l672:
   554                           
   555                           ;main.c: 93:     TRISA = 0;
   556     0051  1683               	bsf	3,5	;RP0=1, select bank1
   557     0052  1303               	bcf	3,6	;RP1=0, select bank1
   558     0053  0185               	clrf	5	;volatile
   559     0054                     l674:
   560                           
   561                           ;main.c: 95:     TRISC = 0;
   562     0054  0187               	clrf	7	;volatile
   563     0055                     l676:
   564                           
   565                           ;main.c: 96:     TRISD = 0;
   566     0055  0188               	clrf	8	;volatile
   567     0056                     l678:
   568                           
   569                           ;main.c: 98:     PORTA = 0;
   570     0056  1283               	bcf	3,5	;RP0=0, select bank0
   571     0057  1303               	bcf	3,6	;RP1=0, select bank0
   572     0058  0185               	clrf	5	;volatile
   573     0059                     l680:
   574                           
   575                           ;main.c: 99:     PORTB = 0;
   576     0059  0186               	clrf	6	;volatile
   577     005A                     l682:
   578                           
   579                           ;main.c: 100:     PORTC = 0;
   580     005A  0187               	clrf	7	;volatile
   581     005B                     l684:
   582                           
   583                           ;main.c: 101:     PORTD = 0;
   584     005B  0188               	clrf	8	;volatile
   585     005C                     l686:
   586                           
   587                           ;main.c: 103:     OPTION_REGbits.nRBPU = 0;
   588     005C  1683               	bsf	3,5	;RP0=1, select bank1
   589     005D  1303               	bcf	3,6	;RP1=0, select bank1
   590     005E  1381               	bcf	1,7	;volatile
   591     005F                     l688:
   592                           
   593                           ;main.c: 104:     INTCONbits.GIE = 1;
   594     005F  178B               	bsf	11,7	;volatile
   595     0060                     l690:
   596                           
   597                           ;main.c: 105:     INTCONbits.PEIE = 1;
   598     0060  170B               	bsf	11,6	;volatile
   599     0061                     l692:
   600                           
   601                           ;main.c: 106:     INTCONbits.RBIE = 1;
   602     0061  158B               	bsf	11,3	;volatile
   603     0062                     l694:
   604                           
   605                           ;main.c: 107:     PIE1bits.ADIE = 1;
   606     0062  170C               	bsf	12,6	;volatile
   607     0063                     l696:
   608                           
   609                           ;main.c: 109:     WPUBbits.WPUB7 = 1;
   610     0063  1795               	bsf	21,7	;volatile
   611     0064                     l698:
   612                           
   613                           ;main.c: 110:     WPUBbits.WPUB6 = 1;
   614     0064  1715               	bsf	21,6	;volatile
   615     0065                     l700:
   616                           
   617                           ;main.c: 111:     IOCBbits.IOCB7 = 1;
   618     0065  1796               	bsf	22,7	;volatile
   619     0066                     l702:
   620                           
   621                           ;main.c: 112:     IOCBbits.IOCB6 = 1;
   622     0066  1716               	bsf	22,6	;volatile
   623     0067                     l704:
   624                           
   625                           ;main.c: 114:     OSCCONbits.IRCF0 = 0;
   626     0067  120F               	bcf	15,4	;volatile
   627     0068                     l706:
   628                           
   629                           ;main.c: 115:     OSCCONbits.IRCF1 = 1;
   630     0068  168F               	bsf	15,5	;volatile
   631     0069                     l708:
   632                           
   633                           ;main.c: 116:     OSCCONbits.IRCF2 = 1;
   634     0069  170F               	bsf	15,6	;volatile
   635     006A                     l710:
   636                           
   637                           ;main.c: 117:     OSCCONbits.SCS = 1;
   638     006A  140F               	bsf	15,0	;volatile
   639     006B                     l73:
   640     006B  0008               	return
   641     006C                     __end_of_setup:
   642                           
   643                           	psect	text3
   644     00A9                     __ptext3:	
   645 ;; *************** function _isr *****************
   646 ;; Defined at:
   647 ;;		line 67 in file "main.c"
   648 ;; Parameters:    Size  Location     Type
   649 ;;		None
   650 ;; Auto vars:     Size  Location     Type
   651 ;;		None
   652 ;; Return value:  Size  Location     Type
   653 ;;                  1    wreg      void 
   654 ;; Registers used:
   655 ;;		wreg, status,2, status,0, pclath, cstack
   656 ;; Tracked objects:
   657 ;;		On entry : 0/0
   658 ;;		On exit  : 0/0
   659 ;;		Unchanged: 0/0
   660 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   661 ;;      Params:         0       0       0       0       0
   662 ;;      Locals:         0       0       0       0       0
   663 ;;      Temps:          2       0       0       0       0
   664 ;;      Totals:         2       0       0       0       0
   665 ;;Total ram usage:        2 bytes
   666 ;; Hardware stack levels used: 1
   667 ;; Hardware stack levels required when called: 1
   668 ;; This function calls:
   669 ;;		_contador
   670 ;; This function is called by:
   671 ;;		Interrupt level 1
   672 ;; This function uses a non-reentrant model
   673 ;;
   674                           
   675     00A9                     _isr:	
   676                           ;psect for function _isr
   677                           
   678     00A9                     i1l744:
   679                           
   680                           ;main.c: 68:     if (INTCONbits.RBIF == 1){
   681     00A9  1C0B               	btfss	11,0	;volatile
   682     00AA  28AC               	goto	u8_21
   683     00AB  28AD               	goto	u8_20
   684     00AC                     u8_21:
   685     00AC  28B3               	goto	i1l63
   686     00AD                     u8_20:
   687     00AD                     i1l746:
   688                           
   689                           ;main.c: 69:         contador();
   690     00AD  120A  118A  2022  120A  118A  	fcall	_contador
   691     00B2                     i1l748:
   692                           
   693                           ;main.c: 70:         INTCONbits.RBIF = 0;
   694     00B2  100B               	bcf	11,0	;volatile
   695     00B3                     i1l63:
   696     00B3  0872               	movf	??_isr+1,w
   697     00B4  008A               	movwf	10
   698     00B5  0E71               	swapf	??_isr,w
   699     00B6  0083               	movwf	3
   700     00B7  0EFE               	swapf	btemp,f
   701     00B8  0E7E               	swapf	btemp,w
   702     00B9  0009               	retfie
   703     00BA                     __end_of_isr:
   704                           
   705                           	psect	intentry
   706     0004                     __pintentry:	
   707                           ;incstack = 0
   708                           ; Regs used in _isr: [wreg+status,2+status,0+pclath+cstack]
   709                           
   710     0004                     interrupt_function:
   711     007E                     saved_w	set	btemp
   712     0004  00FE               	movwf	btemp
   713     0005  0E03               	swapf	3,w
   714     0006  00F1               	movwf	??_isr
   715     0007  080A               	movf	10,w
   716     0008  00F2               	movwf	??_isr+1
   717     0009  120A  118A  28A9   	ljmp	_isr
   718                           
   719                           	psect	text4
   720     0022                     __ptext4:	
   721 ;; *************** function _contador *****************
   722 ;; Defined at:
   723 ;;		line 74 in file "main.c"
   724 ;; Parameters:    Size  Location     Type
   725 ;;		None
   726 ;; Auto vars:     Size  Location     Type
   727 ;;		None
   728 ;; Return value:  Size  Location     Type
   729 ;;                  1    wreg      void 
   730 ;; Registers used:
   731 ;;		wreg, status,2, status,0
   732 ;; Tracked objects:
   733 ;;		On entry : 0/0
   734 ;;		On exit  : 0/0
   735 ;;		Unchanged: 0/0
   736 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   737 ;;      Params:         0       0       0       0       0
   738 ;;      Locals:         0       0       0       0       0
   739 ;;      Temps:          1       0       0       0       0
   740 ;;      Totals:         1       0       0       0       0
   741 ;;Total ram usage:        1 bytes
   742 ;; Hardware stack levels used: 1
   743 ;; This function calls:
   744 ;;		Nothing
   745 ;; This function is called by:
   746 ;;		_isr
   747 ;; This function uses a non-reentrant model
   748 ;;
   749                           
   750     0022                     _contador:	
   751                           ;psect for function _contador
   752                           
   753     0022                     i1l716:	
   754                           ;incstack = 0
   755                           ; Regs used in _contador: [wreg+status,2+status,0]
   756                           
   757                           
   758                           ;main.c: 75:     if (PORTBbits.RB6 == 0){
   759     0022  1283               	bcf	3,5	;RP0=0, select bank0
   760     0023  1303               	bcf	3,6	;RP1=0, select bank0
   761     0024  1B06               	btfsc	6,6	;volatile
   762     0025  2827               	goto	u1_21
   763     0026  2828               	goto	u1_20
   764     0027                     u1_21:
   765     0027  282A               	goto	i1l66
   766     0028                     u1_20:
   767     0028                     i1l718:
   768                           
   769                           ;main.c: 76:         bandera = 1;}
   770     0028  01F4               	clrf	_bandera
   771     0029  0AF4               	incf	_bandera,f
   772     002A                     i1l66:
   773                           
   774                           ;main.c: 77:     if (PORTBbits.RB6 == 1 && bandera == 1){
   775     002A  1F06               	btfss	6,6	;volatile
   776     002B  282D               	goto	u2_21
   777     002C  282E               	goto	u2_20
   778     002D                     u2_21:
   779     002D  2838               	goto	i1l726
   780     002E                     u2_20:
   781     002E                     i1l720:
   782     002E  0374               	decf	_bandera,w
   783     002F  1D03               	btfss	3,2
   784     0030  2832               	goto	u3_21
   785     0031  2833               	goto	u3_20
   786     0032                     u3_21:
   787     0032  2838               	goto	i1l726
   788     0033                     u3_20:
   789     0033                     i1l722:
   790                           
   791                           ;main.c: 78:         PORTD++;
   792     0033  3001               	movlw	1
   793     0034  00F0               	movwf	??_contador
   794     0035  0870               	movf	??_contador,w
   795     0036  0788               	addwf	8,f	;volatile
   796     0037                     i1l724:
   797                           
   798                           ;main.c: 79:         bandera = 0;
   799     0037  01F4               	clrf	_bandera
   800     0038                     i1l726:
   801                           
   802                           ;main.c: 81:     if (PORTBbits.RB7 == 0){
   803     0038  1B86               	btfsc	6,7	;volatile
   804     0039  283B               	goto	u4_21
   805     003A  283C               	goto	u4_20
   806     003B                     u4_21:
   807     003B  283E               	goto	i1l730
   808     003C                     u4_20:
   809     003C                     i1l728:
   810                           
   811                           ;main.c: 82:         bandera = 2;}
   812     003C  3002               	movlw	2
   813     003D  00F4               	movwf	_bandera
   814     003E                     i1l730:
   815                           
   816                           ;main.c: 83:     if (PORTBbits.RB7 == 1 && bandera == 2){
   817     003E  1F86               	btfss	6,7	;volatile
   818     003F  2841               	goto	u5_21
   819     0040  2842               	goto	u5_20
   820     0041                     u5_21:
   821     0041  284B               	goto	i1l70
   822     0042                     u5_20:
   823     0042                     i1l732:
   824     0042  3002               	movlw	2
   825     0043  0674               	xorwf	_bandera,w
   826     0044  1D03               	btfss	3,2
   827     0045  2847               	goto	u6_21
   828     0046  2848               	goto	u6_20
   829     0047                     u6_21:
   830     0047  284B               	goto	i1l70
   831     0048                     u6_20:
   832     0048                     i1l734:
   833                           
   834                           ;main.c: 84:         PORTD--;
   835     0048  3001               	movlw	1
   836     0049  0288               	subwf	8,f	;volatile
   837     004A                     i1l736:
   838                           
   839                           ;main.c: 85:         bandera = 0;
   840     004A  01F4               	clrf	_bandera
   841     004B                     i1l70:
   842     004B  0008               	return
   843     004C                     __end_of_contador:
   844     007E                     btemp	set	126	;btemp
   845     007E                     wtemp0	set	126
   846                           
   847                           	psect	idloc
   848                           
   849                           ;Config register IDLOC0 @ 0x2000
   850                           ;	unspecified, using default values
   851     2000                     	org	8192
   852     2000  3FFF               	dw	16383
   853                           
   854                           ;Config register IDLOC1 @ 0x2001
   855                           ;	unspecified, using default values
   856     2001                     	org	8193
   857     2001  3FFF               	dw	16383
   858                           
   859                           ;Config register IDLOC2 @ 0x2002
   860                           ;	unspecified, using default values
   861     2002                     	org	8194
   862     2002  3FFF               	dw	16383
   863                           
   864                           ;Config register IDLOC3 @ 0x2003
   865                           ;	unspecified, using default values
   866     2003                     	org	8195
   867     2003  3FFF               	dw	16383
   868                           
   869                           	psect	config
   870                           
   871                           ;Config register CONFIG1 @ 0x2007
   872                           ;	Oscillator Selection bits
   873                           ;	FOSC = INTRC_NOCLKOUT, INTOSCIO oscillator: I/O function on RA6/OSC2/CLKOUT pin, I/O f
      +                          unction on RA7/OSC1/CLKIN
   874                           ;	Watchdog Timer Enable bit
   875                           ;	WDTE = OFF, WDT disabled and can be enabled by SWDTEN bit of the WDTCON register
   876                           ;	Power-up Timer Enable bit
   877                           ;	PWRTE = OFF, PWRT disabled
   878                           ;	RE3/MCLR pin function select bit
   879                           ;	MCLRE = OFF, RE3/MCLR pin function is digital input, MCLR internally tied to VDD
   880                           ;	Code Protection bit
   881                           ;	CP = OFF, Program memory code protection is disabled
   882                           ;	Data Code Protection bit
   883                           ;	CPD = OFF, Data memory code protection is disabled
   884                           ;	Brown Out Reset Selection bits
   885                           ;	BOREN = OFF, BOR disabled
   886                           ;	Internal External Switchover bit
   887                           ;	IESO = OFF, Internal/External Switchover mode is disabled
   888                           ;	Fail-Safe Clock Monitor Enabled bit
   889                           ;	FCMEN = OFF, Fail-Safe Clock Monitor is disabled
   890                           ;	Low Voltage Programming Enable bit
   891                           ;	LVP = OFF, RB3 pin has digital I/O, HV on MCLR must be used for programming
   892                           ;	In-Circuit Debugger Mode bit
   893                           ;	DEBUG = 0x1, unprogramme   894     2007                     	org	8199
   895     2007  20D4               	dw	8404
   896                           
   897                           ;Config register CONFIG2 @ 0x2008
   898                           ;	Brown-out Reset Selection bit
   899                           ;	BOR4V = BOR40V, Brown-out Reset set to 4.0V
   900                           ;	Flash Program Memory Self Write Enable bits
   901                           ;	WRT = OFF, Write protection off
   902     2008                     	org	8200
   903     2008  3FFF               	dw	16383

Data Sizes:
    Strings     0
    Constant    0
    Data        16
    BSS         1
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      4       5
    BANK0            80      0      16
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    _main->_setupADC

Critical Paths under _isr in COMMON

    _isr->_contador

Critical Paths under _main in BANK0

    None.

Critical Paths under _isr in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _isr in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _isr in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _isr in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0       0
                              _setup
                           _setupADC
 ---------------------------------------------------------------------------------
 (1) _setupADC                                             1     1      0       0
                                              3 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (1) _setup                                                0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 1
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (2) _isr                                                  2     2      0       0
                                              1 COMMON     2     2      0
                           _contador
 ---------------------------------------------------------------------------------
 (3) _contador                                             1     1      0       0
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _setup
   _setupADC

 _isr (ROOT)
   _contador

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BANK3               60      0       0       9        0.0%
BITBANK3            60      0       0       8        0.0%
SFR3                 0      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
BANK2               60      0       0      11        0.0%
BITBANK2            60      0       0      10        0.0%
SFR2                 0      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
BANK1               50      0       0       7        0.0%
BITBANK1            50      0       0       6        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR1              0      0       0       2        0.0%
BANK0               50      0      10       5       20.0%
BITBANK0            50      0       0       4        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
COMMON               E      4       5       1       35.7%
BITCOMMON            E      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
DATA                 0      0      15      12        0.0%
ABS                  0      0      15       3        0.0%
NULL                 0      0       0       0        0.0%
STACK                0      0       0       2        0.0%
EEDATA             100      0       0       0        0.0%


Microchip Technology PIC Macro Assembler V2.40 build 20220703182018 
Symbol Table                                                                                   Thu Jan 19 23:20:18 2023

                      pc 0002                       l73 006B                       l76 0095  
                     u70 007C                       u71 007B                       u97 0093  
                     fsr 0004                      l700 0065                      l710 006A  
                    l702 0066                      l704 0067                      l712 0081  
                    l706 0068                      l714 0091                      l708 0069  
                    l740 0076                      l670 004F                      l742 007C  
                    l680 0059                      l672 0051                      l690 0060  
                    l682 005A                      l674 0054                      l738 006C  
                    l692 0061                      l684 005B                      l676 0055  
                    l668 004C                      l694 0062                      l686 005C  
                    l678 0056                      l696 0063                      l688 005F  
                    l698 0064                      _isr 00A9                      indf 0000  
                   ?_isr 0070                     i1l70 004B                     i1l63 00B3  
                   i1l66 002A                     u1_20 0028                     u1_21 0027  
                   u2_20 002E                     u2_21 002D                     u3_20 0033  
                   u3_21 0032                     u4_20 003C                     u4_21 003B  
                   u5_20 0042                     u5_21 0041                     u6_20 0048  
                   u6_21 0047                     u8_20 00AD                     u8_21 00AC  
                   _main 006C                     _nums 0020                     btemp 007E  
                   start 000C                    ??_isr 0071                    ?_main 0070  
                  _ANSEL 0188                    i1l720 002E                    i1l730 003E  
                  i1l722 0033                    i1l732 0042                    i1l724 0037  
                  i1l716 0022                    i1l734 0048                    i1l726 0038  
                  i1l718 0028                    i1l736 004A                    i1l728 003C  
                  i1l744 00A9                    i1l746 00AD                    i1l748 00B2  
                  _PORTA 0005                    _PORTB 0006                    _PORTC 0007  
                  _PORTD 0008                    _TRISA 0085                    _TRISC 0087  
                  _TRISD 0088                    _setup 004C                    pclath 000A  
                  status 0003                    wtemp0 007E          __initialization 000F  
           __end_of_main 0081                   ??_main 0074                   ?_setup 0070  
                 _ANSELH 0189         __end_of_contador 004C         __end_of_setupADC 0096  
                 saved_w 007E  __end_of__initialization 001E           __pcstackCOMMON 0070  
           __pidataBANK0 00BA            __end_of_setup 006C           _OPTION_REGbits 0081  
                ??_setup 0073               __pmaintext 006C               __pintentry 0004  
              ?_contador 0070                ?_setupADC 0070                  _bandera 0074  
                __ptext1 0081                  __ptext2 004C                  __ptext3 00A9  
                __ptext4 0022     end_of_initialization 001E               ??_contador 0070  
             ??_setupADC 0073                _PORTBbits 0006      start_initialization 000F  
            __end_of_isr 00BA               init_fetch0 0096              __pdataBANK0 0020  
            __pbssCOMMON 0074                ___latbits 0002        interrupt_function 0004  
               _IOCBbits 0096                 _PIE1bits 008C               _ADCON0bits 001F  
             _ADCON1bits 009F                 _WPUBbits 0095                 _contador 0022  
               _setupADC 0081               _INTCONbits 000B                 init_ram0 009A  
               intlevel1 0000               _OSCCONbits 008F  
